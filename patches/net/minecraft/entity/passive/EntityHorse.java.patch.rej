++++ REJECTED PATCH 2
             return p_apply_1_ instanceof EntityHorse && ((EntityHorse)p_apply_1_).isBreeding();
         }
     };
-    private static final IAttribute JUMP_STRENGTH = (new RangedAttribute((IAttribute)null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).setDescription("Jump Strength").setShouldWatch(true);
+    public static final IAttribute JUMP_STRENGTH = (new RangedAttribute((IAttribute)null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).setDescription("Jump Strength").setShouldWatch(true);
     private static final UUID ARMOR_MODIFIER_UUID = UUID.fromString("556E1665-8B10-40C8-8F9D-CF9B1667F295");
     private static final DataParameter<Byte> STATUS = EntityDataManager.<Byte>createKey(EntityHorse.class, DataSerializers.BYTE);
     private static final DataParameter<Integer> HORSE_TYPE = EntityDataManager.<Integer>createKey(EntityHorse.class, DataSerializers.VARINT);
++++ END PATCH
++++ REJECTED PATCH 3
     public int tailCounter;
     public int sprintCounter;
     protected boolean horseJumping;
-    private AnimalChest horseChest;
+    public AnimalChest horseChest;
     private boolean hasReproduced;
     protected int temper;
     protected float jumpPower;
++++ END PATCH
++++ REJECTED PATCH 4
     private int gallopTime;
     private String texturePrefix;
     private final String[] horseTexturesArray = new String[3];
+    public int maxDomestication = 100; // CraftBukkit - store max domestication value
     @SideOnly(Side.CLIENT)
     private boolean hasTexture;
 
++++ END PATCH
++++ REJECTED PATCH 5
         return this.isChested() && horsetype.canBeChested() ? 17 : 2;
     }
 
-    private void initHorseChest()
+    public void initHorseChest()
     {
         AnimalChest animalchest = this.horseChest;
         this.horseChest = new AnimalChest("HorseChest", this.getChestSize());
++++ END PATCH
++++ REJECTED PATCH 6
 
     public int getMaxTemper()
     {
-        return 100;
+        return this.maxDomestication; // CB
     }
 
     protected float getSoundVolume()
++++ END PATCH
